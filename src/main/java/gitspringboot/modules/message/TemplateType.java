// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

package gitspringboot.modules.message;

/**
 * <pre>
 * 模版类型
 * </pre>
 *
 * Protobuf enum {@code message.TemplateType}
 */
public enum TemplateType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 验证码
   * </pre>
   *
   * <code>verify_code = 0;</code>
   */
  verify_code(0),
  /**
   * <pre>
   * 通知
   * </pre>
   *
   * <code>notify = 1;</code>
   */
  notify(1),
  /**
   * <pre>
   * 推广
   * </pre>
   *
   * <code>promotion = 2;</code>
   */
  promotion(2),
  /**
   * <pre>
   * 国际信息
   * </pre>
   *
   * <code>international_message = 3;</code>
   */
  international_message(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * 验证码
   * </pre>
   *
   * <code>verify_code = 0;</code>
   */
  public static final int verify_code_VALUE = 0;
  /**
   * <pre>
   * 通知
   * </pre>
   *
   * <code>notify = 1;</code>
   */
  public static final int notify_VALUE = 1;
  /**
   * <pre>
   * 推广
   * </pre>
   *
   * <code>promotion = 2;</code>
   */
  public static final int promotion_VALUE = 2;
  /**
   * <pre>
   * 国际信息
   * </pre>
   *
   * <code>international_message = 3;</code>
   */
  public static final int international_message_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static TemplateType valueOf(int value) {
    return forNumber(value);
  }

  public static TemplateType forNumber(int value) {
    switch (value) {
      case 0: return verify_code;
      case 1: return notify;
      case 2: return promotion;
      case 3: return international_message;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TemplateType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      TemplateType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TemplateType>() {
          public TemplateType findValueByNumber(int number) {
            return TemplateType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return MessageProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final TemplateType[] VALUES = values();

  public static TemplateType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private TemplateType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:message.TemplateType)
}

